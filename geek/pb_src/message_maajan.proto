syntax = "proto3";

enum HU_TYPE{
	WEI_HU					= 0;	//未胡
	TIAN_HU					= 1;	//天胡
	DI_HU					= 2;	//地胡
	REN_HU					= 3;	//人胡
	TIAN_TING				= 4;	//天听
	QING_YI_SE				= 5;	//清一色
	QUAN_HUA				= 6;	//全花
	ZI_YI_SE				= 7;	//字一色
	MIAO_SHOU_HUI_CHUN		= 8;	//妙手回春
	HAI_DI_LAO_YUE			= 9;	//海底捞月
	GANG_SHANG_HUA			= 10;	//杠上开花
	QUAN_QIU_REN			= 11;	//全求人
	SHUANG_AN_GANG			= 12;	//双暗杠
	SHUANG_JIAN_KE			= 13;	//双箭刻
	HUN_YI_SE				= 14;	//混一色
	BU_QIU_REN				= 15;	//不求人
	SHUANG_MING_GANG		= 16;	//双明杠
	HU_JUE_ZHANG			= 17;	//胡绝张
	JIAN_KE					= 18;	//箭刻
	MEN_QING				= 19;	//门前清
	AN_GANG					= 20;	//暗杠
	DUAN_YAO				= 21;	//断幺
	SI_GUI_YI				= 22;	//四归一
	PING_HU					= 23;	//平胡
	SHUANG_AN_KE			= 24;	//双暗刻
	SAN_AN_KE				= 25;	//三暗刻
	SI_AN_KE				= 26;	//四暗刻
	BAO_TING				= 27;	//报听
	MEN_FENG_KE				= 28;	//门风刻
	QUAN_FENG_KE			= 29;	//圈风刻
	ZI_MO					= 30;	//自摸
	DAN_DIAO_JIANG			= 31;	//单钓将
	YI_BAN_GAO	 			= 32;	//一般高
	LAO_SHAO_FU	 			= 33;	//老少副
	LIAN_LIU	 			= 34;	//连六
	YAO_JIU_KE	 			= 35;	//幺九刻
	MING_GANG	 			= 36;	//明杠
	DA_SAN_FENG				= 37;	//大三风
	XIAO_SAN_FENG			= 38;	//小三风
	PENG_PENG_HU			= 39;	//碰碰胡
	SAN_GANG				= 40;	//三杠
	QUAN_DAI_YAO			= 41;	//全带幺
	QIANG_GANG_HU			= 42;	//抢杠胡
	HUA_PAI					= 43;	//花牌
	DA_QI_XIN				= 44;	//大七星
	LIAN_QI_DUI 			= 45;	//连七对
	SAN_YUAN_QI_DUI			= 46;	//三元七对子
	SI_XI_QI_DUI			= 47;	//四喜七对子
	QI_DUI 					= 48;	//普通七对
	DA_YU_WU 				= 49;	//大于五
	XIAO_YU_WU 				= 50;	//小于五
	DA_SI_XI				= 51;	//大四喜
	XIAO_SI_XI				= 52;	//小四喜
	DA_SAN_YUAN				= 53;	//大三元
	XIAO_SAN_YUAN			= 54;	//小三元
	JIU_LIAN_BAO_DENG		= 55;	//九莲宝灯
	LUO_HAN_18				= 56;	//18罗汉
	SHUANG_LONG_HUI			= 57;	//一色双龙会
	YI_SE_SI_TONG_SHUN		= 58;	//一色四同顺
	YI_SE_SI_JIE_GAO		= 59;	//一色四节高
	YI_SE_SI_BU_GAO			= 60;	//一色四步高
	HUN_YAO_JIU				= 61;	//混幺九
	YI_SE_SAN_JIE_GAO		= 62;	//一色三节高
	YI_SE_SAN_TONG_SHUN		= 63;	//一色三同顺
	SI_ZI_KE				= 64;	//四字刻
	QING_LONG				= 65;	//清龙
	YI_SE_SAN_BU_GAO		= 66;	//一色三步高
	DA_DUI_ZI  				= 67;	//大对子
	LONG_QI_DUI 			= 68;	//龙七对
	QING_QI_DUI 			= 69;	//清七对
	QING_LONG_BEI 			= 70;	//清龙背
	QING_DA_DUI 			= 71;	//清大对
	QING_DAN_DIAO			= 72;	//清单吊

	NORMAL_JI 				= 73;	//鸡牌
	FAN_PAI_JI 				= 74;	//翻牌鸡
	CHONG_FENG_JI 			= 75;	//冲锋鸡
	ZHE_REN_JI 				= 76;	//责任鸡
	WU_GU_JI 				= 77;	//乌骨鸡
	YAO_BAI_JI 				= 78;	//摇摆鸡
	BEN_JI 					= 79;	//本鸡
	XING_QI_JI 				= 80;	//星期鸡
	CHUI_FENG_JI 			= 81;	//吹风鸡
	BA_GANG					= 82;	//把杠
	DIAN_PAO				= 83;	//点炮
	WEI_JIAO 				= 84; 	//查叫
	JIAO_PAI				= 85;	//叫牌
	MEN 					= 86;	//闷
	MEN_ZI_MO				= 87; 	//自摸闷
	LIAN_ZHUANG				= 88; 	//连庄
	ZHUANG					= 89;	//庄家
	YING_BAO 				= 90;	//天听硬报
	RUAN_BAO				= 91;	//天听软报
	SHA_BAO					= 92; 	//杀报
	HONG_ZHONG				= 93;	//红中
	CHONG_FENG_WU_GU		= 94;	//冲锋乌骨鸡
	ZHE_REN_WU_GU			= 95;	//责任乌骨鸡
	JING_JI					= 96;	//金鸡
	JING_WU_GU_JI			= 97;	//金乌骨鸡
	CHONG_FENG_JING_JI		= 98;	//冲锋金鸡
	CHONG_FENG_JING_WU_GU	= 99;	//冲锋金乌骨鸡
	ZHE_REN_JING_JI			= 100;	//责任金鸡
	ZHE_REN_JING_WU_GU		= 101;	//责任金乌骨
	GANG_SHANG_PAO			= 102;	//杠上炮
	JIANG_DUI				= 103;  //将对
	JIANG_QI_DUI			= 104;	//将七对
	QUAN_YAO_JIU			= 105;	//全幺九
	DAI_GOU 				= 106;	//带根
}


enum ACTION{
	ACTION_NIL = 0;
	ACTION_TRUSTEE = 0x1;
	ACTION_PENG = 0x2;
	ACTION_AN_GANG = 0x4;
	ACTION_MING_GANG = 0x8;
	ACTION_BA_GANG = 0x10;
	ACTION_HU = 0x20;
	ACTION_PASS = 0x40;
	ACTION_LEFT_CHI = 0x80;
	ACTION_MID_CHI = 0x100;
	ACTION_RIGHT_CHI = 0x200;
	ACTION_TING = 0x400;
	ACTION_JIA_BEI = 0x800;
	ACTION_CHU_PAI = 0x1000;
	ACTION_ZI_MO = 0x2000;
	ACTION_MEN = 0x4000;
	ACTION_MO_PAI = 0x8000;
	ACTION_MEN_ZI_MO = 0x10000;
	ACTION_FREE_BA_GANG = 0x20000;
	ACTION_FREE_AN_GANG = 0x40000;
	ACTION_DING_QUE = 0x80000;
	ACTION_HUAN_PAI = 0x100000;
}

enum SECTION_TYPE {
	Four = 0;
	AnGang = 1;
	MingGang = 2;
	BaGang = 3;
	DuiZi = 4;
	Three = 5;
	Peng = 6;
	Chi = 7;
	LeftChi = 8;
	MidChi = 9;
	RightChi = 10;
	FreeBaGang = 11;
	FreeAnGang = 12;
}

enum FSM_STATE {
    PER_BEGIN       		= 0;	//预开始
    XI_PAI		    		= 1;    //洗牌 
	CHECK_TING				= 2;	//补花
	WAIT_MO_PAI  			= 4;	//等待 摸牌
	WAIT_CHU_PAI  			= 5;	//等待 出牌
	WAIT_ACTION_AFTER_CHU_PAI	= 6;	//等待 碰 杠 胡 用户出牌的时候
	WAIT_ACTION_AFTER_MO_PAI 	= 7;	//等待 胡 用户巴杠的时候，抢胡
	WAIT_QIANG_GANG_HU			= 8;
	GAME_BALANCE			= 15;	//结算
	GAME_CLOSE				= 16;	//关闭游戏
	HUAN_PAI				= 17;	//换牌
	DING_QUE				= 18;	//定缺
	GAME_IDLE_HEAD			= 0x1000; //用于客户端播放动画延迟
}

enum HUAN_PAI_ORDER{
	CLOCK_WISE = 0;				//顺时针
	COUNTER_CLOCK_WISE = 1; 	//逆时针
	DIAGONAL = 2;				//对角换
}

message Maajan_Tiles {
	repeated int32 tiles = 1;						// 牌
}

message Maajan_MingPai{
	int32 tile = 1;
	int32 type = 2;
}



message Maajan_Player_Info {
	repeated Maajan_MingPai pb_ming_pai 	= 1; 	// 明牌
	repeated int32 shou_pai 	= 2; 			// 手牌
	repeated int32 hua_pai 		= 3; 			// 花牌
	repeated int32 desk_pai 	= 4; 			// 桌牌，打出去的牌
	int32 chair_id		= 5; 			// id
	
	// game end
	bool is_hu 			= 6;			//是否胡了
	int32 hu_fan	 	= 7; 			//番数
	int32 jiabei	 	= 8; 			//加倍次数
	string describe		= 9;			//牌型描述
	int32 win_money 	= 10; 			//赢钱
	int32 taxes 		= 11; 			//税收
	bool finish_task	= 12; 			//完成任务
	bool is_ting 		= 13;			//是否听
	int32 total_score 	= 14;
	int32 round_score 	= 15;
	repeated int32 men_pai = 16;
}

message Maajan_Reconnect_Data {
	int32 act_left_time = 1;						// 操作剩余时间
	int32 last_chu_pai_chair = 2;				// 最后一次出牌用户索引  或者  当前该谁出牌
	int32 last_chu_pai = 3;						// 最后一次的出牌
}

message Maajan_Task_Data {
	int32 task_type = 1;						// 任务类型
	int32 task_tile = 2;						// 牌值
	int32 task_scale = 3;						// 加倍就是 2
}

message SC_Maajan_Desk_Enter {
	enum MsgID { Nil = 0; ID = 23100; }
	repeated Maajan_Player_Info pb_players 	= 1; 		// 玩家
	int32 state = 2;							//状态
    int32 zhuang = 3;							//庄家
    int32 self_chair_id = 4;					//id
	int32 act_time_limit = 5;					// 操作时间
	int32 decision_time_limit = 6;				// 碰刚吃胡加倍 思考时间时间
	bool is_reconnect = 7;						//reconnect
	Maajan_Reconnect_Data pb_rec_data = 8;		//断线数据
	Maajan_Task_Data pb_task_data = 9;			//任务
	int32 round = 10;
}

//剩余多少张公牌
message SC_Maajan_Tile_Left {
	enum MsgID { Nil = 0; ID = 23108; }
	int32 tile_left = 1;				
}

//该谁出牌
message SC_Maajan_Discard_Round{
	enum MsgID { Nil = 0; ID = 23109; }
	int32 chair_id	 = 1;				
}

//服务器的游戏状态
message SC_Maajan_Desk_State{
	enum MsgID { Nil = 0; ID = 23110; }
	int32 state = 1;				
}

//摸牌
message SC_Maajan_Draw{
	enum MsgID { Nil = 0; ID = 23111; }
	int32 chair_id = 1;
	int32 tile = 2;					// 摸到的牌值，含补花	
}

//开始阶段补花
message SC_Maajan_Bu_Hua{
	enum MsgID { Nil = 0; ID = 23112; }
	repeated Maajan_Tiles pb_bu_hu 	= 1; 		// 补花
}

//托管
message SC_Maajan_Act_Trustee {
	enum MsgID { Nil = 0; ID = 23113; }
	int32 chair_id	 = 1;	
	bool is_trustee = 2;				//最終托管狀態 true托管 false 非托管
}

message Maajan_Balance_Score{
	int32 score = 1;
	int32 type = 2;
	int32 tile = 3;
	int32 count = 4;
	int32 fan = 5;
}

message Maajan_Balance_Item{
	enum ItemType{
		Nil  = 0;
		Hu = 1;
		ZiMo = 2;
		Men = 3;
		MenZiMo = 4;
	}

	ItemType 			 type = 1;
	repeated Maajan_Balance_Score typescore = 2;
}

message Maajan_Blanace_Player{
	enum BalanceStatus{
		Nil = 0;
		Hu = 1;
		JiaoPai = 2;
		WeiJiao = 3;
	}
	int32 chair_id 			= 1;
	bool  hu 				= 2;	//是否胡了
	int32 hu_fan	 		= 3; 	//番数
	int32 total_score 		= 4;
	int32 round_score 		= 5;
	repeated Maajan_Balance_Item  items = 6;
	repeated Maajan_Balance_Score gang = 7;
	repeated Maajan_Balance_Score ji = 8;
	BalanceStatus 			status = 9;
	int32 hu_tile 			= 10;
	int32 round_money 		= 11;
	int32 total_money  		= 12;
}

//结算
message SC_Maajan_Game_Finish {
	enum MsgID { Nil = 0; ID = 23115; }
	repeated Maajan_Player_Info 	players = 1;
	repeated Maajan_Blanace_Player 	player_balance = 2;
	int32 	ben_ji = 3;
}


message Action{
	int32 action = 1;
	int32 tile = 2;
}

message SC_WaitingDoActions { 
	enum MsgID { Nil = 0; ID = 23116;}
	int32 chair_id = 1;
	repeated Action actions = 3;
}

message CS_Maajan_Do_Action{
	enum MsgID { Nil = 0; ID = 23002;}
	int32 action = 1;
	int32 value_tile = 2;
}

message SC_Maajan_Do_Action{
	enum MsgID { Nil = 0; ID = 23118;}
	int32 chair_id = 1;
	int32 action = 2;
	int32 value_tile = 3;
}

message CS_Maajan_Action_Discard{
	enum MsgID { Nil = 0; ID = 23003;}
	int32 tile = 1;
}

message SC_Maajan_Action_Discard{
	enum MsgID { Nil = 0; ID = 23119;}
	int32 chair_id = 1;
	int32 tile = 2;
}

message Maajan_Player_Score {
	int32 chair_id = 1;	
	int32 guid = 2;
	int32 score = 3;
}

message SC_Maajan_Final_Game_Over{
	enum MsgID { Nil = 0; ID = 23120;}
	repeated Maajan_Player_Score player_scores = 1;
}

message SC_Maajan_StopAction{
	enum MsgID { Nil = 0; ID = 23121;}
	int32 chair_id = 1;
}

message TingTiles{
	int32 discard = 1;
	repeated int32 tiles = 2;
}

message SC_WaitingTing{
	enum MsgID { Nil = 0; ID = 23122;}
	repeated TingTiles ting = 1;
}

message HuanPaiStatus{
	int32 chair_id = 1;
	bool  done = 2;
}

message SC_AllowHuanPai{
	enum MsgID { Nil = 0; ID = 23123;}
}

message CS_HuanPai{
	enum MsgID { Nil = 0; ID = 23124;}
	repeated int32 tiles = 1;
}

message SC_HuanPai{
	enum MsgID { Nil = 0; ID = 23125;}
	int32 result = 1;
	int32 chair_id = 2;
	bool  done = 3;
	repeated int32 self_choice = 4;
}

message SC_HuanPaiCommit{
	enum MsgID { Nil = 0; ID = 23126;}
	repeated int32 new_shou_pai = 1;
	int32 huan_order = 2;
}

message SC_HuanPaiStatus{
	enum MsgID { Nil = 0; ID = 23127;}
	repeated int32 self_choice = 1;
	repeated HuanPaiStatus status = 2;
}

message DingQueInfo{
	int32 chair_id = 1;
	int32 men = 2;
}

message DingQueStatus{
	int32 chair_id = 1;
	bool  done = 2;
}

message SC_AllowDingQue{
	enum MsgID { Nil = 0; ID = 23128;}
}

message CS_DingQue{
	enum MsgID { Nil = 0; ID = 23129;}
	int32 men = 1;
}

message SC_DingQue{
	enum MsgID { Nil = 0; ID = 23130;}
	int32 result = 1;
	DingQueStatus status = 2;
}

message SC_DingQueStatus{
	enum MsgID { Nil = 0; ID = 23131;}
	repeated DingQueStatus que_status = 1;
	repeated DingQueInfo   que_info = 2;
}

message SC_DingQueCommit{
	enum MsgID { Nil = 0; ID = 23132;}
	repeated DingQueInfo ding_ques = 1;
}

message MaajanXueZhanBalanceType{
	int32 type = 1;
	int32 count = 2;
}

message MaajanXueZhanBlanacePlayer{
	enum BalanceStatus{
		Nil = 0;
		Hu = 1;
		JiaoPai = 2;
		WeiJiao = 3;
	}
	int32 chair_id 			= 1;
	bool  hu 				= 2;	//是否胡了
	int32 hu_fan	 		= 3; 	//番数
	int32 total_score 		= 4;
	int32 round_score 		= 5;
	repeated MaajanXueZhanBalanceType  items = 6;
	BalanceStatus 			status = 7;
	int32 hu_tile 			= 8;
	int32 round_money 		= 9;
	int32 total_money  		= 10;
}

//结算
message SC_MaajanXueZhanGameFinish {
	enum MsgID { Nil = 0; ID = 23133; }
	repeated Maajan_Player_Info 			players = 1;
	repeated MaajanXueZhanBlanacePlayer 	player_balance = 2;
}

message TingTilesInfo{ 
	int32 tile = 1;
	int32 fan = 2;
}

message TingTips{
	int32 discard = 1;
	repeated TingTilesInfo tiles_info = 2;
}

// 听牌提示
message SC_TingTips{
	enum MsgID { Nil = 0; ID = 23124;}
	repeated TingTips ting = 1;
}

// 操作限时回复
message SC_TimeOutNotify{
	enum MsgID{Nil = 0; ID = 1209;}
	int32 timeout = 2;
}